I"1<h3 id="wsl是是由微软与-canonical-公司合作开发的-windows-子系统在wsl环境中需要对vscode进行配置才能调试c程序">WSL是是由微软与 Canonical 公司合作开发的 Windows 子系统，在WSL环境中，需要对VSCODE进行配置才能调试C++程序</h3>

<ol>
  <li>
    <p>首先VSCode需要安装C/C++拓展插件</p>
  </li>
  <li>
    <p>选择 <code class="highlighter-rouge">调试</code> -&gt; <code class="highlighter-rouge">添加配置</code> -&gt; <code class="highlighter-rouge">C++(GDB/LLDB)</code>, 将生成的<code class="highlighter-rouge">launch.json</code>替换为以下内容:</p>
  </li>
</ol>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{ 
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) Bash on Windows Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "/mnt/c/C++Projects/test/a.out(注意修改)",
            "args": [],
            "stopAtEntry": false,
            "miDebuggerArgs": "",
            "cwd": "/mnt/c/C++Projects/test/(注意修改)",
            "environment": [],
            "externalConsole": false,
            "sourceFileMap": {
                "/mnt/c/": "C:\\"
            },
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "${env:windir}\\system32\\bash.exe",
                "pipeArgs": [
                    "-c"
                ],
                "pipeCwd": ""
            },
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
    ]
}
</code></pre></div></div>

<h4 id="参数">参数：</h4>

<ul>
  <li><code class="highlighter-rouge">program</code> : 被调试的可执行文件.需要修改</li>
  <li><code class="highlighter-rouge">sourceFileMap</code> : 由 wsl 到的 windows 的目录映射.如果test.c不在C盘需要修改</li>
  <li><code class="highlighter-rouge">cwd</code> : 可执行文件的运行目录.</li>
  <li><code class="highlighter-rouge">stopAtEntry</code> : 是否在main函数起点暂停. args : 可执行文件的参数.</li>
</ul>

<h3 id="调试">调试</h3>

<ul>
  <li>如果是在终端使用gcc编译：  启动终端, 输入 bash 进入wsl, 运行 gcc -g test.c , -g 选项开启调试模式.</li>
  <li>如果是使用CMake进行编译，在CMakeLists.txt设置调试选项</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SET(CMAKE_BUILD_TYPE "Debug")
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g2 -ggdb")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")
</code></pre></div></div>
:ET